solid-js import { createSignal }

export [colors, setColors] := createSignal 4

// List of 20 Simple, Distinct Colors by Sasha Trubetskoy [2017]
// https://sashamaps.net/docs/resources/20-colors/
distinctColors := [
  '#e6194B', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9', '#ffffff', '#000000'
]

// Generate ith color in a palette of n colors
export function color(i: number, n = colors()): string
  i = i %% n
  return distinctColors[i] if n <= 20

  hues .= n
  lights .= [50]
  if n > 8
    lights.push 25, 75
    if n > 64
      lights.push 12.5, 37.5, 62.5, 87.5
    hues = Math.ceil hues / lights#

  hue := i %% hues
  light := lights[i %/ hues]
  `hsl(${(i * 360 / hues).toFixed 1}, 100%, ${light}%)`
