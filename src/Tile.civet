from solid-js import { createMemo }
from @thisbeyond/solid-dnd import { createDroppable }
from ./color.civet import { color }

export type Prototile
  n: number
  s: number
  w: number
  e: number

export tileSize := 50
export glueSize := 13
export tabWidth := 10
export tabDepth := 5

export function Tile(props: {tile: Prototile, id: number, selected: boolean, onClick: any})
  droppableN := createDroppable 4*props.id+0, 'n'
  droppableW := createDroppable 4*props.id+1, 'w'
  droppableS := createDroppable 4*props.id+2, 's'
  droppableE := createDroppable 4*props.id+3, 'e'
  <svg .tile viewBox=`0 0 ${tileSize} ${tileSize}` classList={{props.selected}}>
    <rect .background width=tileSize height=tileSize {props.onClick}>
    <polygon .glue fill=color(props.tile.n) stroke="#444" points=
      `0,0 ${glueSize},${glueSize} ${tileSize - glueSize},${glueSize} ${tileSize},0`
    use:droppableN classList={dropping: droppableN.isActiveDroppable}
    >
    <polygon .glue fill=color(props.tile.w) stroke="#444" points=
      `0,0 ${glueSize},${glueSize} ${glueSize},${tileSize - glueSize} 0,${tileSize}`
    use:droppableW classList={dropping: droppableW.isActiveDroppable}
    >
    <polygon .glue fill=color(props.tile.s) stroke="#444" points=
      `0,${tileSize} ${glueSize},${tileSize - glueSize} ${tileSize - glueSize},${tileSize - glueSize} ${tileSize},${tileSize}`
    use:droppableS classList={dropping: droppableS.isActiveDroppable}
    >
    <polygon .glue fill=color(props.tile.e) stroke="#444" points=
      `${tileSize},0 ${tileSize - glueSize},${glueSize} ${tileSize - glueSize},${tileSize - glueSize} ${tileSize},${tileSize}`
    use:droppableE classList={dropping: droppableE.isActiveDroppable}
    >
    <!--<rect .outline width=tileSize height=tileSize>-->

export function SignedTile(props: {tile: Prototile, glues: number, selected: boolean, onClick: any})
  strokeWidth := 1.5

  function Tab(tabProps: {glue: number, angle?: number})
    sign := => -Math.sign tabProps.glue
    <polygon .glue fill=color(Math.abs(tabProps.glue) - 1, props.glues) points=
      `0,0 ${glueSize},${glueSize} ${tileSize - glueSize},${glueSize} ${tileSize},0` +
      ` ${tileSize/2 + tabWidth/2},0 ${tileSize/2 + tabWidth/2},${sign() * tabDepth} ${tileSize/2 - tabWidth/2},${sign() * tabDepth} ${tileSize/2 - tabWidth/2},0`
    stroke='#444'
    transform=
      if tabProps.angle
        `rotate(${tabProps.angle} ${tileSize/2} ${tileSize/2})`
    >

  <svg .tile .signed viewBox=`${-strokeWidth/2 - tabDepth} ${-strokeWidth/2 - tabDepth} ${tileSize + strokeWidth + 2*tabDepth} ${tileSize + strokeWidth + 2*tabDepth}` classList={{props.selected}} {props.onClick}>
    <rect .background x=glueSize y=glueSize width={tileSize - 2*glueSize} height={tileSize - 2*glueSize}>
    <Tab glue=props.tile.n>
    <Tab glue=props.tile.e angle=90>
    <Tab glue=props.tile.s angle=180>
    <Tab glue=props.tile.w angle=270>
